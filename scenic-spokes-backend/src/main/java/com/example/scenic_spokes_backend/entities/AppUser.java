package com.example.scenic_spokes_backend.entities;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.*;
import java.util.ArrayList;
import java.util.List;

@Builder
@Data //@Data a part of Lombok library, generates common boilerplate code when you run the program
@Entity
@Table(name = "app_users")
public class AppUser {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Setter(AccessLevel.NONE) //ensures Lombok doesn't generate a setter for id
    private int id;

    @Column(name = "clerk_id", unique = true, nullable = false)
    private String clerkId; //since the frontend uses clerk for user creation and authentication, the database needs a column for
                            //each user's id generated by clerk
    @Column(name = "first_name")
    private String firstName;

    @Column(name = "last_name")
    private String lastName;

    @Column(name = "username", unique = true, nullable = false) //ensures no duplicate usernames in database and cannot be null
    private String username;

    @Column(name = "email", unique = true, nullable = false)
    private String email;

    @OneToMany(mappedBy = "appUser")
    @JsonIgnore
    private final List<Event> events = new ArrayList<>();

    @OneToMany(mappedBy = "appUser")
    @JsonIgnore
    private final List<MotorcycleRoute> routes = new ArrayList<>();
}
